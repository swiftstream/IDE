load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

worker_processes auto;
events {
    worker_connections 1024;
}
http {
    include /etc/nginx/mime.types;
    server {
        listen 3081;
        listen [::]:3081;
        server_name _;
        return 301 https://$host$request_uri;
    }
    server {
        listen 3080;
        server_name _;

        root /usr/share/nginx/html;
        
        # Enable gzip
        gzip on;
        gzip_static on; # serve precompressed .gz files if available
        gzip_comp_level 6;
        gzip_min_length 1024;
        gzip_types
            text/plain
            text/css
            application/javascript
            application/json
            application/xml
            text/xml
            text/javascript
            image/svg+xml
            application/rss+xml;

        # Enable brotli
        brotli on;
        brotli_static on; # serve precompressed .br files if available
        brotli_comp_level 6;
        brotli_types
            text/plain
            text/css
            application/javascript
            application/json
            application/xml
            text/xml
            text/javascript
            image/svg+xml
            application/rss+xml;
            
        error_log	/var/log/swift.server_error.log warn;
        access_log	/var/log/swift.server_access.log;
        
        large_client_header_buffers 8 32k;

        location / {
            # the following is required for WebSockets
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
    
            # supposedly prevents 502 bad gateway error;
            # ultimately not necessary in my case
            proxy_buffers 8 32k;
            proxy_buffer_size 64k;
            
            # the following is required
            
            proxy_pass http://127.0.0.1:8080/;
            proxy_redirect off;
            proxy_read_timeout 86400;
    
            # the following is required as well for WebSockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            reset_timedout_connection on;

            tcp_nodelay on; # not necessary
        }
        
        location ~* \.(js|css|html|json|svg|xml|txt|csv|webp)$ {
            add_header Vary Accept-Encoding;
            add_header Cache-Control "public, no-transform";
            expires 30d;
            access_log off;
        }

        # Serve WASM files with correct MIME type
        location ~* \.wasm$ {
            brotli off;
            brotli_static on;
            gzip_static on;
            gunzip on;
            expires 30d;
            add_header Content-Type application/wasm;
            add_header Cache-Control "public, no-transform";
        }
    }
}